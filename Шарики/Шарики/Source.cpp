#include <iostream>

using namespace std;

//для 1 шарика - 1 вар и 0 перестановок
//для 2 шариков - 1 вар и 2 перестановки
//для 3 шариков - 4 вар и 6 перестановок
//для 4 шариков - 15 вар и 24 перестановок
//для 5 шариков - 76 вар и 120 перестановок
//для 6 шариков - 455 вар и 720 перестановок
//для 7 шариков - 3186 вар и 5040 перестановок
//для 8 шариков - 25487 вар и 40320 перестановок
//для 10 шариков - 2293839 вар и 3628800 перестановок

int факториал(int n)
{	
	if (n > 1)
	{
		for (int i = (n - 1); i >= 2; i--)
		{
			n *= i;
		}
		return n;
	}	

	else
	{
		return 1;
	}
}

int перестановка(int n, int* урна)
{
	setlocale(LC_ALL, "rus");	

	int ответ = 0;

	int буфер = 0;

	int save_a[10]{};

	int save_b[10]{};

	int save_c[10]{};

	int save_d[10]{};

	int save_e[10]{};

	int save_f[10]{};

	int save_g[10]{};

	int save_h[10]{};

	int save_i[10]{};

	int всего = 0;
	
	if (n == 1 or n == 2)
	{
		cout << "\nКоличество совпадений = 1" << endl;
		return 0;
	}

	else
	{
		save_a[0] = урна[2];

		save_b[0] = урна[3];

		save_c[0] = урна[4];

		save_d[0] = урна[5];

		save_f[0] = урна[6];

		save_g[0] = урна[7];

		save_h[0] = урна[8];

		save_i[0] = урна[9];

		for (int i = 0; i <= 9; i++)
		{
			for (int h = 0; h <= 8; h++)
			{
				for (int g = 0; g <= 7; g++)
				{
					for (int f = 0; f <= 6; f++)
					{
						for (int d = 0; d <= 5; d++)
						{
							for (int c = 0; c <= 4; c++)
							{
								for (int b = 0; b <= 3; b++)
								{
									for (int a = 0; a <= 2; a++)
									{
										for (int e = 0; e <= 1; e++)
										{
											//меняем местами первый и второй элементы

											буфер = урна[0];
											урна[0] = урна[1];
											урна[1] = буфер;

											//проверка текущего варианта

											for (int счётчик = 1; счётчик <= n; счётчик++)
											{
												if (счётчик == урна[счётчик - 1])
												{
													ответ++;
													break;
												}
											}
											//выведение текущего варианта на консоль

											cout << endl;
											for (int считать = 0; считать < n; считать++)
											{
												cout << урна[считать];
											}
											cout << endl;
											
											всего++;											

											if (a == 2 and e == 1)
											{
												break;
											}
										}
										//меняем третий элемент

										if (n > 2 and a != 2)
										{
											for (int считать = 0; считать < 3; считать++)
											{
												//проверяем, была ли уже такая цифра на этом месте
												for (int z = 0; z < 10; z++)
												{
													if (save_a[z] == урна[считать])
													{
														goto two;
													}
												}

												//записываем текущее значение в массив со значениями, которые уже были
												for (int z = 0; z < 10; z++)
												{
													if (save_a[z] == 0)
													{
														save_a[z] = урна[считать];

														break;
													}
												}

												буфер = урна[2];
												урна[2] = урна[считать];
												урна[считать] = буфер;																							

												break;

											two:												
												считать+=0;
											}
										}
									}
									//меняем четвёртый элемент

									if (n > 3 and b != 3)
									{
										//зачищаем предыдущие значения
										for (int z = 0; z < 10; z++)
										{
											save_a[z] = 0;											
										}

										for (int считать = 0; считать < 10; считать++)
										{
											//проверяем, была ли уже такая цифра на этом месте
											for (int z = 0; z < 10; z++)
											{
												if (save_b[z] == урна[считать])
												{
													goto three;
												}
											}

											//записываем текущее значение в массив со значениями, которые уже были
											for (int z = 0; z < 10; z++)
											{
												if (save_b[z] == 0)
												{
													save_b[z] = урна[считать];

													break;
												}
											}																																	

											буфер = урна[3];
											урна[3] = урна[считать];
											урна[считать] = буфер;

											//записываем текущее значение в массивы со значениями предыдущих позиций
											save_a[0] = урна[2];

											save_a[1] = урна[3];

											break;

										three:
											считать += 0;
										}
									}

									else if (n < 4)
									{
										goto end;
									}
								}
								//меняем пятый элемент

								if (n > 4 and c != 4)
								{
									//зачищаем предыдущие значения
									for (int z = 0; z < 10; z++)
									{
										save_a[z] = 0;
									}

									for (int z = 0; z < 10; z++)
									{
										save_b[z] = 0;
									}

									for (int считать = 0; считать < 10; считать++)
									{
										//проверяем, была ли уже такая цифра на этом месте
										for (int z = 0; z < 10; z++)
										{
											if (save_c[z] == урна[считать])
											{
												goto four;
											}
										}

										//записываем текущее значение в массив со значениями, которые уже были
										for (int z = 0; z < 10; z++)
										{
											if (save_c[z] == 0)
											{
												save_c[z] = урна[считать];

												break;
											}
										}

										буфер = урна[4];
										урна[4] = урна[считать];
										урна[считать] = буфер;

										//записываем текущее значение в массивы со значениями предыдущих позиций
										save_a[0] = урна[2];

										save_a[1] = урна[4];

										save_b[0] = урна[3];

										save_b[1] = урна[4];

										break;

									four:
										считать += 0;
									}
								}

								else if (n < 5)
								{
									goto end;
								}
							}
							//меняем шестой элемент

							if (n > 5 and d != 5)
							{
								//зачищаем предыдущие значения
								for (int z = 1; z < 10; z++)
								{
									save_a[z] = 0;
								}

								for (int z = 1; z < 10; z++)
								{
									save_b[z] = 0;
								}

								for (int z = 1; z < 10; z++)
								{
									save_c[z] = 0;
								}

								for (int считать = 0; считать < 10; считать++)
								{
									//проверяем, была ли уже такая цифра на этом месте
									for (int z = 0; z < 10; z++)
									{
										if (save_d[z] == урна[считать])
										{
											goto five;
										}
									}

									//записываем текущее значение в массив со значениями, которые уже были
									for (int z = 0; z < 10; z++)
									{
										if (save_d[z] == 0)
										{
											save_d[z] = урна[считать];

											break;
										}
									}

									буфер = урна[5];
									урна[5] = урна[считать];
									урна[считать] = буфер;

									//записываем текущее значение в массивы со значениями предыдущих позиций
									save_a[0] = урна[2];

									save_a[1] = урна[5];

									save_b[0] = урна[3];

									save_b[1] = урна[5];

									save_c[0] = урна[4];

									save_c[1] = урна[5];

									break;

								five:
									считать += 0;
								}
							}

							else if (n < 6)
							{
								goto end;
							}
						}
						//меняем седьмой элемент

						if (n > 6 and f != 6)
						{
							//зачищаем предыдущие значения
							for (int z = 1; z < 10; z++)
							{
								save_a[z] = 0;
							}

							for (int z = 1; z < 10; z++)
							{
								save_b[z] = 0;
							}

							for (int z = 1; z < 10; z++)
							{
								save_c[z] = 0;
							}

							for (int z = 1; z < 10; z++)
							{
								save_d[z] = 0;
							}

							for (int считать = 0; считать < 10; считать++)
							{
								//проверяем, была ли уже такая цифра на этом месте
								for (int z = 0; z < 10; z++)
								{
									if (save_f[z] == урна[считать])
									{
										goto six;
									}
								}

								//записываем текущее значение в массив со значениями, которые уже были
								for (int z = 0; z < 10; z++)
								{
									if (save_f[z] == 0)
									{
										save_f[z] = урна[считать];

										break;
									}
								}

								буфер = урна[6];
								урна[6] = урна[считать];
								урна[считать] = буфер;

								//записываем текущее значение в массивы со значениями предыдущих позиций
								save_a[0] = урна[2];

								save_a[1] = урна[6];

								save_b[0] = урна[3];

								save_b[1] = урна[6];

								save_c[0] = урна[4];

								save_c[1] = урна[6];

								save_d[0] = урна[5];

								save_d[1] = урна[6];

								break;

							six:
								считать += 0;
							}
						}

						else if (n < 7)
						{
							goto end;
						}
					}
					//меняем восьмой элемент

					if (n > 7 and g != 7)
					{
						//зачищаем предыдущие значения
						for (int z = 1; z < 10; z++)
						{
							save_a[z] = 0;
						}

						for (int z = 1; z < 10; z++)
						{
							save_b[z] = 0;
						}

						for (int z = 1; z < 10; z++)
						{
							save_c[z] = 0;
						}

						for (int z = 1; z < 10; z++)
						{
							save_d[z] = 0;
						}

						for (int z = 1; z < 10; z++)
						{
							save_f[z] = 0;
						}

						for (int считать = 0; считать < 10; считать++)
						{
							//проверяем, была ли уже такая цифра на этом месте
							for (int z = 0; z < 10; z++)
							{
								if (save_g[z] == урна[считать])
								{
									goto seven;
								}
							}

							//записываем текущее значение в массив со значениями, которые уже были
							for (int z = 0; z < 10; z++)
							{
								if (save_g[z] == 0)
								{
									save_g[z] = урна[считать];

									break;
								}
							}

							буфер = урна[7];
							урна[7] = урна[считать];
							урна[считать] = буфер;

							//записываем текущее значение в массивы со значениями предыдущих позиций
							save_a[0] = урна[2];

							save_a[1] = урна[7];

							save_b[0] = урна[3];

							save_b[1] = урна[7];

							save_c[0] = урна[4];

							save_c[1] = урна[7];

							save_d[0] = урна[5];

							save_d[1] = урна[7];

							save_f[0] = урна[6];

							save_f[1] = урна[7];

							break;

						seven:
							считать += 0;
						}
					}

					else if (n < 8)
					{
						goto end;
					}
				}
				//меняем девятый элемент

				if (n > 8 and h != 8)
				{
					//зачищаем предыдущие значения
					for (int z = 1; z < 10; z++)
					{
						save_a[z] = 0;
					}

					for (int z = 1; z < 10; z++)
					{
						save_b[z] = 0;
					}

					for (int z = 1; z < 10; z++)
					{
						save_c[z] = 0;
					}

					for (int z = 1; z < 10; z++)
					{
						save_d[z] = 0;
					}

					for (int z = 1; z < 10; z++)
					{
						save_f[z] = 0;
					}

					for (int z = 1; z < 10; z++)
					{
						save_g[z] = 0;
					}

					for (int считать = 0; считать < 10; считать++)
					{
						//проверяем, была ли уже такая цифра на этом месте
						for (int z = 0; z < 10; z++)
						{
							if (save_h[z] == урна[считать])
							{
								goto eight;
							}
						}

						//записываем текущее значение в массив со значениями, которые уже были
						for (int z = 0; z < 10; z++)
						{
							if (save_h[z] == 0)
							{
								save_h[z] = урна[считать];

								break;
							}
						}

						буфер = урна[8];
						урна[8] = урна[считать];
						урна[считать] = буфер;

						//записываем текущее значение в массивы со значениями предыдущих позиций
						save_a[0] = урна[2];

						save_a[1] = урна[8];

						save_b[0] = урна[3];

						save_b[1] = урна[8];

						save_c[0] = урна[4];

						save_c[1] = урна[8];

						save_d[0] = урна[5];

						save_d[1] = урна[8];

						save_f[0] = урна[6];

						save_f[1] = урна[8];

						save_g[0] = урна[7];

						save_g[1] = урна[8];

						break;

					eight:
						считать += 0;
					}
				}

				else if (n < 9)
				{
					goto end;
				}
			}
			//меняем десятый элемент

			if (n > 9 and i != 9)
			{
				//зачищаем предыдущие значения
				for (int z = 1; z < 10; z++)
				{
					save_a[z] = 0;
				}

				for (int z = 1; z < 10; z++)
				{
					save_b[z] = 0;
				}

				for (int z = 1; z < 10; z++)
				{
					save_c[z] = 0;
				}

				for (int z = 1; z < 10; z++)
				{
					save_d[z] = 0;
				}

				for (int z = 1; z < 10; z++)
				{
					save_f[z] = 0;
				}

				for (int z = 1; z < 10; z++)
				{
					save_g[z] = 0;
				}

				for (int z = 1; z < 10; z++)
				{
					save_h[z] = 0;
				}

				for (int считать = 0; считать < 10; считать++)
				{
					//проверяем, была ли уже такая цифра на этом месте
					for (int z = 0; z < 10; z++)
					{
						if (save_i[z] == урна[считать])
						{
							goto nine;
						}
					}

					//записываем текущее значение в массив со значениями, которые уже были
					for (int z = 0; z < 10; z++)
					{
						if (save_i[z] == 0)
						{
							save_i[z] = урна[считать];

							break;
						}
					}

					буфер = урна[9];
					урна[9] = урна[считать];
					урна[считать] = буфер;

					//записываем текущее значение в массивы со значениями предыдущих позиций
					save_a[0] = урна[2];

					save_a[1] = урна[9];

					save_b[0] = урна[3];

					save_b[1] = урна[9];

					save_c[0] = урна[4];

					save_c[1] = урна[9];

					save_d[0] = урна[5];

					save_d[1] = урна[9];

					save_f[0] = урна[6];

					save_f[1] = урна[9];

					save_g[0] = урна[7];

					save_g[1] = урна[9];

					save_h[0] = урна[8];

					save_h[1] = урна[9];

					break;

				nine:
					считать += 0;
				}
			}

			else if (n < 10)
			{
				goto end;
			}
		}
	}		

end:
	cout << "\nКоличество совпадений = " << ответ << endl;	

	cout << "\n" << "Общее количество вариантов = " << всего << "\n";

	return 0;
}

int main()
{
	setlocale(LC_ALL, "rus");

	int n;

	cout << "Введите количество шариков\n" << endl;
	cin >> n;

	if (n <= 0)
	{
		cout << "\nОшибка\n";
	}

	else
	{
		int* урна = new int[n];

		//запись
		for (int i = 0; i < n; i++)
		{
			урна[i] = (i + 1);
		}

		//вычисление		
		перестановка(n, урна);			

		delete[] урна;
	}	

	return 0;
}